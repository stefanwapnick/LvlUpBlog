@using NHibernate.Linq
@model LvlUpBlog.ViewModels.SidebarIndex

@{
    Layout = null;
}

<div class="panel panel-default">
    <div class="panel-heading text-center"><strong>Site Statistics</strong></div>
    <div class="panel-body level-panel">
        <h2>Level @Model.SiteLevel.Tier <small> @Model.SiteLevel.Name </small></h2>
        <hr />
        <div class="text-center"><img src="@Model.SiteLevel.ImagePath.Substring(1)" class="level-image" /></div><br />
        <table class="table">
            <tr><td>Posts:</td><td>@Model.SitePosts / @Model.SiteLevel.AmountToNext</td></tr>
            <tr><td>Comments:</td><td>@Model.SiteComments</td></tr>
        </table>
        <span>Level Meter:</span>
        @{
            double siteLevelPercent = Math.Ceiling((double)@Model.SitePosts / @Model.SiteLevel.AmountToNext * 100);
            <div class="progress"><div class="progress-bar progress-bar-danger" style="width: @(siteLevelPercent)%;  color: black;"></div></div>
        }

    </div>
</div>

@if (Model.IsLoggedIn)
{
    <div class="panel panel-default">
        <div class="panel-heading text-center"><strong>User: @Model.Username</strong> </div>
        <div class="panel-body level-panel">
            <h2>Level @Model.UserLevel.Tier <small> @Model.UserLevel.Name </small></h2>
            <hr />
            <div class="text-center"><img src="@Model.UserLevel.ImagePath.Substring(1)" class="level-image" /></div><br />
            <table class="table">
                <tr><td>Posts:</td><td>@Model.UserPosts / @Model.UserLevel.AmountToNext</td></tr>
                <tr><td>Comments:</td><td>@Model.UserComments</td></tr>
            </table>
            <span>Level Meter:</span>
            @{
                double userLevelPercent = Math.Ceiling((double)@Model.UserPosts / @Model.UserLevel.AmountToNext * 100);
                <div class="progress"><div class="progress-bar progress-bar-danger" style="width: @(userLevelPercent)%;  color: black;"></div></div>
            }
        </div>
    </div>
}

@if (Model.Tags.Count() > 0)
{
    var maxPostsInTag = Model.Tags.Max(t => t.PostCount);
    
    <div class="panel panel-default tags">
        <div class="panel-heading text-center"><strong>Tags</strong></div>
        <div class="panel-body">
            <div class="list-group">
                @foreach (var tag in Model.Tags)
                {
                    double percent = Math.Ceiling((double)tag.PostCount/maxPostsInTag * 100);
                    
                    <a href="@Url.RouteUrl("Tag", new{tag.Id, tag.Slug})" class="list-group-item">
                        <span class="name">@tag.Name</span>
                        <span class="badge">@tag.PostCount</span>
                        <span class="progress">
                            <span class="progress-bar progress-bar-info" style="width : @percent%"></span>
                        </span>
                    </a>
                }
            </div>


        </div>
    </div>
}





