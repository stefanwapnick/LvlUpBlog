@using System.Web.Optimization
@model LvlUpBlog.ViewModels.PostsShow

@{
    ViewBag.Title = Model.Post.Title;
}

@section Styles
{
    <link rel="stylesheet" href="~/Content/Styles/posts-show.css">
}


<article>
    <header class="post-header">
        <a class="btn btn-primary" href="@Url.RouteUrl("home")"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
        <div>
            <hr />
            @{
                string year = @Model.Post.CreatedAt.Year.ToString();
                string month = @Model.Post.CreatedAt.ToString("MMM");
                string day = @Model.Post.CreatedAt.Day.ToString();

            <span class="pull-left time-box"><b>@month @day</b> <br />@year</span>
            }
            <h1 class="pull-left">@Model.Post.Title</h1>
            <h1 class="pull-right"><small>By @Model.Post.User.Name</small></h1>

        </div>
        
        <div class="clearfix"></div>
        <br />
        <div class="post-border">
            <span class="time-footer">
            <small><span class="glyphicon glyphicon-time"></span> Last modified: @Model.Post.UpdatedAt (UTC) </small>
            </span>
        </div>
    </header>
    <br />


    <div class="post-body">
        @Html.Raw(Model.Post.Content)
    </div>


    <br />
    <div class="post-footer">
        <a class="btn btn-primary" href="@Url.RouteUrl("home")"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
        <span class="well pull-right">
            <small>
                <span class="glyphicon glyphicon-tags"></span> Tags:
                @if (Model.Post.Tags.Count > 0)
                {
                   foreach (var tag in Model.Post.Tags)
                    {
                    <a class="post-tag-links" href="@Url.RouteUrl("Tag", new { id = tag.Id, slug = tag.Slug })">@tag.Name</a>
                    } 
                }
                else
                {
                    @: None
                }
                
            </small>  
        </span>
    </div>
</article>

<section class="post-comments">
    <header>
        <h3 class="pull-left">Comments</h3>
        <span class="well pull-right">
            Comments: @Model.Post.Comments.Count()
        </span>
        <div class="clearfix"></div>
    </header>

    @foreach (var comment in Model.Post.Comments)
    {
        @Html.Partial("_CommentPartial", comment);
    }


    @using (Html.BeginForm())
    {

        <br />
        <div class="input-group">
            @Html.TextAreaFor(x => x.CommentContent, new { @class = "form-control", placeholder = "Leave a comment.", style = "resize:none;" })
            <span class="input-group-btn">
                <button @(User.Identity.IsAuthenticated ? "" : "disabled") class="btn btn-primary tall-button" type="submit"> Post</button>
            </span>
        </div>

        @Html.HiddenFor(x => x.PostId)

        if (!User.Identity.IsAuthenticated)
        {
            <div class="alert alert-danger"> <i class="glyphicon glyphicon-remove-circle"></i> You must be logged in to comment.</div>
        }
    }

</section>

@section Scripts
{
    <script src="~/Scripts/comment-scripts.js" type="text/javascript"></script>
}